#
# New virtual machine bootstrap script.
#
# Boot to Arch live cd and create a new root password.
# May need to ssh to machine once to store fingerprint
# Then with:
#   ansible-playbook bootstrap.yml --user root -i <machine ip>, --ask-pass
# or copy ssh key:
#   ssh-copy-id -i <pub-key> root@<machine ip>
# then login without ssh pasword:
#   ansible-playbook bootstrap.yml --user root -i <machine ip>, 


- name: Bootstrap host
  hosts: all
  vars:
   new_user: neil
   hostname: arch
   locale: en_GB
   keymap: uk
   new_user_pass: password
  vars_prompt:
   - name: new_user_pass
     prompt: Please enter the new user password for '{{new_user}}'
     private: true
     confirm: true
     unsafe: true
  
  tasks:

   - name: Boot parition
     community.general.parted:
      device: /dev/sda
      label: gpt
      fs_type: fat32
      flags: [ boot , esp ]
      number: 1
      state: present
      part_end: 1GiB
      name: boot
      
   - name: Swap parition
     community.general.parted:
      device: /dev/sda
      label: gpt
      fs_type: linux-swap
      number: 2
      state: present
      part_start: 1GiB
      part_end: 5GiB
      name: swap

   - name: Root parition
     community.general.parted:
      device: /dev/sda
      label: gpt
      fs_type: btrfs
      number: 3
      state: present
      part_start: 5GiB
      part_end: 100%
      name: root

   - name: Format boot
     community.general.filesystem:
       device: /dev/sda1
       fstype: vfat
  
   - name: Format swap
     community.general.filesystem:
       device: /dev/sda2
       fstype: swap
  
   - name: Format root
     community.general.filesystem:
       device: /dev/sda3
       fstype: btrfs

   - name: Mount root
     ansible.builtin.shell: |
       umount -R /mnt; mount /dev/sda3 /mnt

   - name: Mount boot
     ansible.builtin.shell: |
       mkdir -p /mnt/boot && mount /dev/sda1 /mnt/boot

   - block:
     - name: Mount swap
       ansible.builtin.shell: | 
         swapon /dev/sda2 2>1& > /dev/null
     ignore_errors: yes

   - name: Pacstrap
     ansible.builtin.shell: |
       yes | pacstrap -K /mnt base \
       linux linux-firmware ansible sudo git openssh grub efibootmgr

   - name: Gen fstab
     ansible.builtin.shell: |
       genfstab -U /mnt > /mnt/etc/fstab

   - name: Set timezone
     ansible.builtin.shell: |
       arch-chroot /mnt ln -sf /usr/share/zoneinfo/Europe/London /etc/localtime

   - name: Set clock
     ansible.builtin.shell: |
       arch-chroot /mnt hwclock --systohc

   - name: Set locale
     ansible.builtin.shell: |
       arch-chroot /mnt sed -i -e 's/#{{locale}}/{{locale}}/' /etc/locale.gen

   - name: Gen locale
     ansible.builtin.shell: |
       arch-chroot /mnt locale-gen

   - name: Locale conf
     ansible.builtin.template:
      src: files/locale.conf.j2 
      dest: /mnt/etc/locale.conf 

   - name: Vconsole conf
     ansible.builtin.template:
      src: files/vconsole.conf.j2 
      dest: /mnt/etc/vconsole.conf 

   - name: Set hostname
     ansible.builtin.template:
      src: files/hostname.j2 
      dest: /mnt/etc/hostname 

   - block:
     - name: Make initramfs 
       ansible.builtin.shell: |
         arch-chroot /mnt mkinitcpio -P  >/dev/null 2>&1
     ignore_errors: yes

   - name: Set grub
     ansible.builtin.shell: |
       arch-chroot /mnt grub-install \
        --target=x86_64-efi --efi-directory=/boot \
        --bootloader-id=GRUB

   - name: Make grub config 
     ansible.builtin.shell: |
       arch-chroot /mnt grub-mkconfig -o /boot/grub/grub.cfg

   - block:
     - name: Create user
       ansible.builtin.shell: |
         arch-chroot /mnt useradd -m {{new_user}} >/dev/null 2>&1
     ignore_errors: yes

   - name: Set user password
     ansible.builtin.shell: |
       echo {{new_user}}:{{new_user_pass}} | chpasswd -R /mnt

   - name: Create sudoers
     ansible.builtin.shell: |
       arch-chroot /mnt sed -i -e 's/# %sudo/%sudo/' /etc/sudoers

   - name: Set sudo
     ansible.builtin.shell: |
       arch-chroot /mnt groupadd -f -U {{new_user}} sudo

   - name: Configure ansible
     ansible.builtin.shell: |
       arch-chroot /mnt \
        git clone https://github.com/neiltheblue/ansipull.git \
        /home/{{new_user}}/ansipull
        
   - name: Reboot
     ansible.builtin.shell: umount -R /mnt && reboot
